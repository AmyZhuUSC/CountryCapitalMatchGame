{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\OneDrive\\\\A Job hunting\\\\A Job folder\\\\United software corparation\\\\Projects\\\\Calculater\\\\calculater\\\\src\\\\GameMatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./GameMatch.css\";\nimport countryCapitalData from \"./country-list.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameMatch() {\n  _s();\n\n  const num = 5;\n  const [gameEnd, setGameEnd] = useState(false);\n  const [data, setData] = useState([]);\n  const [matchedKey, setMatchedKey] = useState([]);\n  let countryMap = new Map();\n  let capitalMap = new Map();\n\n  function handleStart() {\n    let ind = [],\n        dataTemp = [];\n\n    while (ind.length < num) {\n      let randNum = Math.floor(Math.random() * countryCapitalData.length);\n\n      if (ind.includes(randNum) === false) {\n        ind.push(randNum);\n        let key = Date.now();\n        countryMap.set(countryCapitalData[randNum].country, key);\n        capitalMap.set(countryCapitalData[randNum].capital, key);\n        dataTemp.push(countryCapitalData[randNum]);\n      }\n    }\n\n    setGameEnd(false);\n    setData(dataTemp);\n  }\n\n  useEffect(() => {\n    if (data.length === 0) {\n      setGameEnd(true);\n    }\n  }, [data]);\n\n  function handleMatchButton(item) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [item.country, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) // <button>{item.capital} </button>\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country Capital Matching Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStart(),\n      style: {\n        display: gameEnd === false ? \"block\" : \"none\"\n      },\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleStart(),\n      style: {\n        display: gameEnd === true ? \"block\" : \"none\"\n      },\n      children: \"Start Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => handleMatchButton(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: gameEnd === true ? \"block\" : \"none\"\n      },\n      children: \"Congratulations!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameMatch, \"VY+CYoPr0UVgG7MBg/n7hO7uHuY=\");\n\n_c = GameMatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameMatch\");","map":{"version":3,"names":["React","useState","useEffect","countryCapitalData","GameMatch","num","gameEnd","setGameEnd","data","setData","matchedKey","setMatchedKey","countryMap","Map","capitalMap","handleStart","ind","dataTemp","length","randNum","Math","floor","random","includes","push","key","Date","now","set","country","capital","handleMatchButton","item","display","map"],"sources":["C:/Users/Owner/OneDrive/A Job hunting/A Job folder/United software corparation/Projects/Calculater/calculater/src/GameMatch.js"],"sourcesContent":["import React, {useState, useEffect}  from \"react\";\r\nimport \"./GameMatch.css\";\r\nimport countryCapitalData from \"./country-list.js\";\r\n\r\nexport default function GameMatch() {\r\n    const num = 5;\r\n    const [gameEnd, setGameEnd] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [matchedKey, setMatchedKey] = useState([]);\r\n    let countryMap = new Map();\r\n    let capitalMap = new Map();\r\n    \r\n    function handleStart(){\r\n        let ind = [], dataTemp = [];\r\n        while (ind.length < num) {\r\n            let randNum = Math.floor((Math.random())*(countryCapitalData.length))\r\n            if (ind.includes(randNum) === false) {\r\n                ind.push(randNum);\r\n                let key = Date.now();\r\n                countryMap.set(countryCapitalData[randNum].country, key);\r\n                capitalMap.set(countryCapitalData[randNum].capital, key);\r\n\r\n                dataTemp.push(countryCapitalData[randNum])\r\n            }\r\n        }\r\n        setGameEnd(false);\r\n        setData(dataTemp);\r\n    }\r\n    useEffect(()=>{\r\n        if (data.length === 0) {\r\n            setGameEnd(true)\r\n        }\r\n    }, [data])\r\n\r\n    function handleMatchButton(item) {\r\n        return (\r\n            <button>{item.country} </button>\r\n            // <button>{item.capital} </button>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Country Capital Matching Game!</h1>\r\n            {/* start and start over button */}\r\n            <button \r\n                onClick={()=> handleStart()}\r\n                style={{display: gameEnd === false? \"block\" : \"none\"}} \r\n            >Start</button>\r\n            <button \r\n                onClick={()=> handleStart()}\r\n                style={{display: gameEnd === true? \"block\" : \"none\"}} \r\n            >Start Over</button>\r\n            {/* show matched buttons */}\r\n            <div>\r\n                {data.map((item)=>handleMatchButton(item))}\r\n            </div>\r\n            <div style={{display: gameEnd === true? \"block\" : \"none\"}} >Congratulations!</div>\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,iBAAP;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAChC,MAAMC,GAAG,GAAG,CAAZ;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EACA,IAAIW,UAAU,GAAG,IAAIC,GAAJ,EAAjB;EACA,IAAIC,UAAU,GAAG,IAAID,GAAJ,EAAjB;;EAEA,SAASE,WAAT,GAAsB;IAClB,IAAIC,GAAG,GAAG,EAAV;IAAA,IAAcC,QAAQ,GAAG,EAAzB;;IACA,OAAOD,GAAG,CAACE,MAAJ,GAAab,GAApB,EAAyB;MACrB,IAAIc,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,EAAD,GAAiBnB,kBAAkB,CAACe,MAA/C,CAAd;;MACA,IAAIF,GAAG,CAACO,QAAJ,CAAaJ,OAAb,MAA0B,KAA9B,EAAqC;QACjCH,GAAG,CAACQ,IAAJ,CAASL,OAAT;QACA,IAAIM,GAAG,GAAGC,IAAI,CAACC,GAAL,EAAV;QACAf,UAAU,CAACgB,GAAX,CAAezB,kBAAkB,CAACgB,OAAD,CAAlB,CAA4BU,OAA3C,EAAoDJ,GAApD;QACAX,UAAU,CAACc,GAAX,CAAezB,kBAAkB,CAACgB,OAAD,CAAlB,CAA4BW,OAA3C,EAAoDL,GAApD;QAEAR,QAAQ,CAACO,IAAT,CAAcrB,kBAAkB,CAACgB,OAAD,CAAhC;MACH;IACJ;;IACDZ,UAAU,CAAC,KAAD,CAAV;IACAE,OAAO,CAACQ,QAAD,CAAP;EACH;;EACDf,SAAS,CAAC,MAAI;IACV,IAAIM,IAAI,CAACU,MAAL,KAAgB,CAApB,EAAuB;MACnBX,UAAU,CAAC,IAAD,CAAV;IACH;EACJ,CAJQ,EAIN,CAACC,IAAD,CAJM,CAAT;;EAMA,SAASuB,iBAAT,CAA2BC,IAA3B,EAAiC;IAC7B,oBACI;MAAA,WAASA,IAAI,CAACH,OAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,CAEI;IAFJ;EAIH;;EACD,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MACI,OAAO,EAAE,MAAKd,WAAW,EAD7B;MAEI,KAAK,EAAE;QAACkB,OAAO,EAAE3B,OAAO,KAAK,KAAZ,GAAmB,OAAnB,GAA6B;MAAvC,CAFX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAOI;MACI,OAAO,EAAE,MAAKS,WAAW,EAD7B;MAEI,KAAK,EAAE;QAACkB,OAAO,EAAE3B,OAAO,KAAK,IAAZ,GAAkB,OAAlB,GAA4B;MAAtC,CAFX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAYI;MAAA,UACKE,IAAI,CAAC0B,GAAL,CAAUF,IAAD,IAAQD,iBAAiB,CAACC,IAAD,CAAlC;IADL;MAAA;MAAA;MAAA;IAAA,QAZJ,eAeI;MAAK,KAAK,EAAE;QAACC,OAAO,EAAE3B,OAAO,KAAK,IAAZ,GAAkB,OAAlB,GAA4B;MAAtC,CAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GAxDuBF,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}